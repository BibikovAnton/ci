name: Flutter CI
# Это имя отображается в интерфейсе GitHub Actions, чтобы было проще идентифицировать workflow.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

#Автоматизация запуска workflow при изменении кода в основной ветке или при проверке кода перед слиянием.

jobs:
  build:
    #начем будет запускаться
    runs-on: ubuntu-latest #виртуальная машина
    #Задача build содержит все шаги, необходимые для сборки и тестирования приложения.
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 #скачает за нас репозиторий(GitHub Marckeyplace)
      #Чтобы получить доступ к коду приложения для дальнейших шагов.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      #setup flutter(GitHub Marcetplace)
      #Чтобы иметь доступ к командам Flutter (flutter, dart и т.д.) для сборки и тестирования.
      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk

  test:
    needs: [build]
    strategy:
      matrix:
        version: [3.29.0]
    runs-on: ubuntu-latest #виртуальная машина
    #Задача build содержит все шаги, необходимые для сборки и тестирования приложения.
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 #скачает за нас репозиторий(GitHub Marckeyplace)
      #Чтобы получить доступ к коду приложения для дальнейших шагов.
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{matrix.version}}
      #Чтобы иметь доступ к командам Flutter (flutter, dart и т.д.) для сборки и тестирования.
      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze
  secret:
    runs-on: ubuntu-latest
    steps:
      - name: Print secret
        run: echo ${{secrets.TEST}}
